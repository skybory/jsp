1. MyBatis
프레임워크임 : SprintBoot, MyBatis
라이브러리 : jQuery

  - 객체 지향 언어인 자바의 관계형 데이터베이스 프로그래밍을 좀 더 쉽게 할 수 있게 도와주는
  개발 프레임 워크로써, JDBC를 통해 데이터베이스에 엑세스하는 작업을 캡슐화하고 일반 SQL 쿼리,
  저장 프로시저 및 고급 매핑을 지원하며 모든 JDBC 코드 및 매개 변수의 중복 작업을 제거한다.
  - MyBatis는 프로그램에 있는 SQL 쿼리들을 한 구성파일에 구성하여 프로그램 코드와 SQL을
  분리할 수 있는 장점을 가지고 있다.
  - MyBatis는 기존 JDBC 방식과 달리, SQL 문을 XML 파일에 작성함으로써 코드가 줄어들고
  SQL문만 따로 관리하기 때문에 수정이 편해진다.

2. MyBatis Query

  - select
	성공 : select 문에 해당하는 결과를 return
	실패 : error

  - insert
	성공 : 1(여러개인 경우도 1)
	실패 : 에러

  - update
	성공 : update 된 행의 갯수 반환 ( 없다면 0 )
	실패 : error

  - delete
	성공 : delete 된 행의 개수 반환 ( 없다면 0 )
	실패 : error


3. EL 문과 JSTL

  - JSP 페이지 내에 자바 코드와 HTML 코드가 섞여 있으면 가독성이 떨어진다. EL 문과 JSTL 문을 사용하면 HTML과 같은
  태그로만 구성된 일관된 소스 코드를 볼 수 있다는 장점이 있다.


 3-1. EL
  - Expresiion Language
  - 값을 간결하고 간편하게 출력할 수 있도록 해주는 언어
  - <%= %> , out.println() 과 같은 자바코드를 더이상 사용하지 않고 좀 더 간편하게 출력을 지원하기 위한 도구
  - 배열이나 컬렉션에도 사용되고, JavaBean 프로퍼티에서도 사용된다.
  - ${...} 내에 표현된다.
  - EL 식에서 Attribute의 이름으로 해석이 된다.
	-> 값을 찾을 때는 Attribute는 작은 Scope에서 큰 Scope으로 찾는다.
	-> page > request > session > application

 3-2. EL 연산자
  - 산술연산자 : +,-,*,/(div),%(mode)
  - 논리연산자 : &&(and), ||(or), !(not)
  - 비교연산자 : ==(eq), !=(ne), <(lt), >(gt), <=(le), >=(ge)
  - empty 연산자 : 값이 null 이거나 공백문자인지를 판단하는 연산자
	${empty""}		-> true
	${empty null}	-> true
	${empty data}	-> data 값이 없으면 true, 있으면 false


















